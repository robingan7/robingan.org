 <table name="project" id="dropnotes.gq">
        <column name="title">dropnotes.gq</column>
        <date>2019.9</date>
        <link>
            <![CDATA[
            <li>
                <a>Link</a>
                <ul>
                    <li>
                        <a href="https://github.com/robingan7/dropnotes.gq/">View Code</a>
                    </li>
                    <li>
                        <a href="http://dropnotes.gq">Website</a>
                    </li>
                </ul>
            </li>
            <li>
                <a>Team</a>
                <ul>
                    
                </ul>
            </li>
            <li>
                <a>Gallery</a>
                <ul>
                   
                </ul>
            </li>
            ]]>
        </link>
        <content>
            <![CDATA[
            <h3>Why I made this project</h3>
            <p>As my junior year of <a href="https://www.smhs.org/">HS</a> goes, I realized that I can't focus on any of my classes, instead, I 
            was coding the whole time. My friends in my classes were very generous as they shared their notes and power points with me. And they usually emailed or skyped me the notes and PPTs. I thought this way of sharing files was inefficient, so 
            I made this website from scratch for them to drop files.</p>
            <p><img src="/images/project/dropnotes.gq/cover.png" alt="cover" /></p>
            <p>I finished the website in 3 weeks. All my friends need to do is selecting or dropping the files from their tablets, then clicking the upload button. This is a 
            way that I show respect to my friends who support my coding progress. Big shout out to them!!!!</p>
â€‹
            <h3>Challenges</h3>
            <h4>Multi-files uploading</h4>
            <p>The website can upload multiple files in one click, and I think it's pretty cool (although it might seem easy for you). 
            It did take me some time to figure out. I was struggling to find a way to store the files in the website's temporary memory. </p>
            <p><img src="/images/project/dropnotes.gq/multi-files.gif" alt="multi-files" /></p>
            <p>In the video, I tested the deleting feature as well. Also, the users can change names of the files to whatever they want after selecting the files. </p>
            <p>I used a <code>FormData</code> object to store the file data. In this <a href="https://en.wikipedia.org/wiki/Ajax">ajax</a> method, I use a <code>for</code> loop to add files in javascript array to the <code>FormData</code>. </p>
<figure class="highlight"><pre><code>for(let ele of currentFiles) {
    //edit file name to the ones from the user
    let filename = names[index].value
                + types[index].innerText;

    filesnamesArr.push(filename);
    index++;

    //add to FormData object
    formData.append("file[]", ele, filename);
}
</code>
            </pre>
            </figure>
            <p>The deleting feature is done by this 1 line of code, where I took the index of DOM element in <code>"file_displayer"</code>, and then delete the element in file array with the same index. </p>
<figure class="highlight"><pre><code>let displayerCls = document.getElementById('file_displayer');
let arrayOfCh = Array.from(displayerCls.children);

currentFiles.splice(arrayOfCh.indexOf(obj),1);
</code></pre></figure>
            <p><img src="/images/project/dropnotes.gq/editing.gif" alt="editing" /></p>

            <p>For backend part, my php code basically iterates through the <code>file[ ]</code> the file array from <code>FormData</code>, </p>    
<figure class="highlight"><pre><code>foreach($files['name'] as $pos => $name){
    $fileName = $files["name"][$pos];
    if(checkFile($fileName)){
        /* some code */
    }
    /* some code */
}
</code></pre></figure>
            <p>But more importantly, the php code has the ability of checking the file based on its type and size. This is super important because file types like javascript could potentially cause security problems on the website, and files with very large size could 
                take too much memory of the server. So here is the implementation of the method, 
            </p>           
<figure class="highlight"><pre><code>function checkFile($fileIn){
    $validType = array(
    "svg", "gif", "jpeg", "jpg", 
    "png", "pptx", "ppt", 
    "txt", "xlsx", "xlsm", "csv", 
    "doc", "docx", "docm", "docb", 
    "pdf", "zip", "mp3", "wav", "mp4");

    $name = explode(".", $fileIn);
    $type = strtolower(end($name));
    return in_array($type, $validType)
            && $fileIn["size"] < 50000;
}
</code></pre></figure>
            <h4 class="sectionBreaker">Auto folder creator</h4>
            <p>When you go down the drop files menu, you can see that there are different subjects. And I have a folder called <abbr>"file"</abbr>, which contains all the files the users uploaded. Since I have 
                different subjects so I need to have some sub-folders to keep the directories neat. However, I didn't want to create a new folder on my server every time I add a new subject. Here is the code achieving this task, 
            </p>
<figure class="highlight"><pre><code>$dir = "../files/".$subject;

//checking if the directory already existed
if(!is_dir($dir)){
    mkdir($dir);//create the folder
}
</code></pre></figure>
<h4 class="sectionBreaker">Txt file adding</h4>
<p>This feature allows the user to copy and paste the notes to the text box. Then, the webiste's going to convert 
    the text to a <a href="https://en.wikipedia.org/wiki/Text_file">txt</a> file and store it. 
</p>
<figure class="highlight"><pre><code>let displayerCls = document.getElementById('file_displayer');
let arrayOfCh = Array.from(displayerCls.children);

currentFiles.splice(arrayOfCh.indexOf(obj),1);
</code></pre></figure>
            <p><img src="/images/project/dropnotes.gq/editing.gif" alt="editing" /></p>

            <p>For backend part, my php code basically iterates through the <code>file[ ]</code> the file array from <code>FormData</code>, </p>    
<figure class="highlight"><pre><code>foreach($files['name'] as $pos => $name){
    $fileName = $files["name"][$pos];
    if(checkFile($fileName)){
        /* some code */
    }
    /* some code */
}
</code></pre></figure>
            <p>But more importantly, the php code has the ability of checking the file based on its type and size. This is super important because file types like javascript could potentially cause security problems on the website, and files with very large size could 
                take too much memory of the server. So here is the implementation of the method, 
            </p>           
<figure class="highlight"><pre><code>$myfile = fopen($dir."/".$fileName, "w") 
    or die("Unable to open file!");
fwrite($myfile, replaceRN($content));
fclose($myfile);
</code></pre></figure>
<p>To code this feature, I simply use <code><a href="https://www.php.net/manual/en/function.fwrite.php">fwrite</a></code> method from PHP. It has the same ajax use as the previous feature. Here's a gif of this, </p>
<p><img src="/images/project/dropnotes.gq/add file.gif" alt="multi-files" /></p>


            ]]>
    </content>
</table>